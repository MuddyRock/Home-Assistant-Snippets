blueprint:
  name: Openpaper Link Epaper Waste Collection Display
  description: Blueprint to set up a new Tag for Wastecollection. Openepaperlink Addon must be installed.
  domain: automation
  author: ronbal ( Ronny Schönfeld)
  input:
    epaper_target:
      name: Epaper
      description: Select one EPaper
      selector:
        entity:
          multiple: false
          filter:
            domain: open_epaper_link
    black_bin_target:
      name: Black Bin
      description: Select the Entity for the black Bin
      selector:
        entity:
          multiple: false
          filter:
            domain: sensor
    brown_bin_target:
      name: brown Bin
      description: Select the Entity for the brown Bin
      selector:
        entity:
          multiple: false
          filter:
            domain: sensor
    yellow_bin_target:
      name: yellow Bin
      description: Select the Entity for the yellow Bin
      selector:
        entity:
          multiple: false
          filter:
            domain: sensor
    blue_bin_target:
      name: blue Bin
      description: Select the Entity for the blue Bin
      selector:
        entity:
          multiple: false
          filter:
            domain: sensor   
alias: Update Bins Tag
description: ""
trigger:
  - platform: time_pattern
    hours: /3
condition: []
variables:
  black_bin_entity: !input black_bin_target
  brown_bin_entity: !input brown_bin_target
  yellow_bin_entity: !input yellow_bin_target
  blue_bin_entity: !input blue_bin_target
  black_bin: "{{ states(black_bin_entity)}}"
  brown_bin: "{{ states(brown_bin_entity)}}"
  yellow_bin: "{{ states(yellow_bin_entity)}}"
  blue_bin: "{{ states(blue_bin_entity)}}"
  temperature_entity: !input epaper_target
  temperature_tag: "sensor.{{ states[temperature_entity].name }}_temperature"
  battery_entity: !input epaper_target
  battery_tag: "sensor.{{ states[battery_entity].name }}_battery"
  rssi_entity: !input epaper_target
  rssi_tag: "sensor.{{ states[rssi_entity].name }}_rssi"
  
action:
  - service: open_epaper_link.drawcustom
    target:
      entity_id: !input epaper_target
    data:
      background: black
      rotate: 0
      payload:
        - type: line
          fill: red
          width: 3
          x_start: 5
          y_start: 56
          x_end: 121
          y_end: 56
        - type: line
          fill: red
          width: 3
          x_start: 168
          y_start: 56
          x_end: 290
          y_end: 56
        - type: line
          fill: red
          width: 3
          x_start: 148
          y_start: 3
          x_end: 148
          y_end: 34
        - type: line
          fill: red
          width: 3
          x_start: 148
          y_start: 60
          x_end: 148
          y_end: 123
        - type: rectangle
          outline: black
          fill: >-
            {{'black' if states(black_bin_entity) == 'unknown' or
            states(black_bin_entity) | int > 1 else 'red' }}
          width: 1
          x_start: 5
          y_start: 3
          x_end: 144
          y_end: 52
        - type: text
          value: "{{ states[icon_entity].name }}"
          font: ppb.ttf
          x: 10
          "y": 8
          size: 18
          color: >-
            {{'white' if states(black_bin_entity) == 'unknown' or
            states(black_bin_entity) | int > 1 else 'white' }}
        - type: text
          value: >-
            {% if states(black_bin_entity) == 'unknown' %}Unknown{% elif
            states(black_bin_entity) | int == 0 %}Heute{% elif
            states(black_bin_entity) | int == 1 %}Morgen{% else
            %}{{states(black_bin_entity)}} Tage{% endif %}
          font: ppb.ttf
          x: 8
          "y": 33
          size: 18
          color: >-
            {{'white' if states(blue_bin_entity) == 'unknown' or
            states(blue_bin_entity) | int > 1 else 'white' }}
        - type: rectangle
          outline: black
          fill: >-
            {{'black' if states(blue_bin_entity) == 'unknown' or
            states(blue_bin_entity) | int > 1 else 'red' }}
          width: 1
          x_start: 152
          y_start: 3
          x_end: 290
          y_end: 52
        - type: text
          value: "{{ states[blue_bin_entity].name }}"
          font: ppb.ttf
          x: 180
          "y": 8
          size: 18
          color: >-
            {{'white' if states(blue_bin_entity) == 'unknown' or
            states(blue_bin_entity) | int > 1 else 'white' }}
        - type: text
          value: >-
            {% if states(blue_bin_entity) == 'unknown' %}Unknown{% elif
            states(blue_bin_entity) | int == 0 %}Heute{% elif
            states(blue_bin_entity) | int == 1 %}Morgen{% else
            %}{{states(blue_bin_entity)}} Tage{% endif %}
          font: ppb.ttf
          x: 180
          "y": 33
          size: 18
          color: >-
            {{'white' if states(blue_bin_entity) == 'unknown' or
            states(blue_bin_entity) | int > 1 else 'white' }}
        - type: rectangle
          outline: black
          fill: >-
            {{'black' if states(yellow_bin_entity) == 'unknown' or
            states(yellow_bin_entity) | int > 1 else 'red' }}
          width: 1
          x_start: 5
          y_start: 60
          x_end: 144
          y_end: 107
        - type: text
          value: "{{ states[yellow_bin_entity].name }}"
          font: ppb.ttf
          x: 10
          "y": 70
          size: 18
          color: >-
            {{'white' if states(yellow_bin_entity) == 'unknown' or
            states(yellow_bin_entity) | int > 1 else 'white' }}
        - type: text
          value: >-
            {% if states(yellow_bin_entity) == 'unknown' %}Unknown{%
            elif states(yellow_bin_entity) | int == 0 %}Heute{% elif
            states(yellow_bin_entity) | int == 1 %}Morgen{% else
            %}{{states(yellow_bin_entity)}} Tage{% endif %}
          font: ppb.ttf
          x: 10
          "y": 90
          size: 18
          color: >-
            {{'white' if states(yellow_bin_entity) == 'unknown' or
            states(yellow_bin_entity) | int > 1 else 'white' }}
        - type: rectangle
          outline: black
          fill: >-
            {{'black' if states(yellow_bin_entity) == 'unknown' or
            states(yellow_bin_entity) | int > 1 else 'red' }}
          width: 1
          x_start: 152
          y_start: 60
          x_end: 290
          y_end: 107
        - type: text
          value: "{{ states[brown_bin_entity].name }}"
          font: ppb.ttf
          x: 180
          "y": 70
          size: 18
          color: >-
            {{'white' if states(brown_bin_entity) == 'unknown' or
            states(brown_bin_entity) | int > 1 else 'white' }}
        - type: text
          value: >-
            {% if states(brown_bin_entity) == 'unknown' %}Unknown{% elif
            states(brown_bin_entity) | int == 0 %}Heute{% elif
            states(brown_bin_entity) | int == 1 %}Morgen{% else
            %}{{states(brown_bin_entity)}} Tage{% endif %}
          font: ppb.ttf
          x: 180
          "y": 90
          size: 18
          color: >-
            {{'white' if states(brown_bin_entity) == 'unknown' or
            states(brown_bin_entity) | int > 1 else 'white' }}
        - type: icon
          value: circle
          x: 113
          "y": 20
          size: 70
          color: black
        - type: icon
          value: circle
          x: 123
          "y": 30
          size: 50
          color: >-
            {{ 'red' if (([(14 if states(black_bin_entity) == 'unknown'
            else states(black_bin_entity)),(14 if
            states(blue_bin_entity) == 'unknown' else
            states(black_bin_entity)),(14 if states(brown_bin_entity) ==
            'unknown' else states(brown_bin_entity)),(14 if
            states(yellow_bin_entity) == 'unknown' else
            states(yellow_bin_entity)) ]) | min ) | int < 2 else 'white'
            }}
        - type: rectangle
          outline: red
          fill: white
          width: 2
          x_start: 1
          y_start: 110
          x_end: 293
          y_end: 126
        - type: text
          value: "{{ states(temperature_tag) | string }} °"
          font: ppb.ttf
          x: 265
          "y": 114
          size: 13
          color: black
        - type: icon
          value: thermometer
          x: 250
          "y": 111
          size: 13
          color: red
        - type: icon
          value: battery-medium
          x: 3
          "y": 112
          size: 13
          color: red
        - type: text
          value: "{{ states(battery_tag) | string }} %"
          font: ppb.ttf
          x: 20
          "y": 114
          size: 13
          color: black
        - type: icon
          value: wifi
          x: 60
          "y": 111
          size: 13
          color: red
        - type: text
          value: "{{ states(rssi_tag) | string }} dB"
          font: ppb.ttf
          x: 77
          "y": 114
          size: 13
          color: black
        - type: icon
          value: refresh
          x: 130
          "y": 111
          size: 13
          color: red
        - type: text
          value: "{{ states('sensor.time')}}"
          font: ppb.ttf
          x: 150
          "y": 114
          size: 13
          color: black
mode: single
